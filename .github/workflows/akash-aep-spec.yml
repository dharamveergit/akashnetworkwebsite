name: Update AEP Specs

on:
  schedule:
    - cron: "0 */6 * * *" # Check every 6 hours
  workflow_dispatch:

jobs:
  update-specs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for existing PR
        id: check-pr
        run: |
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
          PR_EXIST=$(gh pr list --search "Update AEP Specs" --json number --jq 'length')
          echo "pr_exists=$PR_EXIST" >> $GITHUB_OUTPUT
          if [ "$PR_EXIST" -gt "0" ]; then
            PR_NUMBER=$(gh pr list --search "Update AEP Specs" --json number --jq '.[0].number')
            echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          fi

      - name: Clone and Update Specs
        id: update-specs
        run: |
          # Remove existing specs
          rm -rf src/content/aeps

          # Clone only the necessary files
          git clone --depth 1 --filter=blob:none https://github.com/dharamveergit/AEP.git temp_aep

          # Create target directory and copy only spec folder
          mkdir -p src/content/aeps
          cp -r temp_aep/spec/* src/content/aeps/
          rm -rf temp_aep

          # Check for changes
          if [[ -n $(git status --porcelain) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Update Existing PR
        if: steps.update-specs.outputs.has_changes == 'true' && steps.check-pr.outputs.pr_exists != '0'
        run: |
          # Configure git
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'

          # Get the branch name from existing PR
          PR_BRANCH=$(gh pr view ${{ steps.check-pr.outputs.pr_number }} --json headRefName --jq '.headRefName')

          # Checkout to that branch
          git fetch origin $PR_BRANCH
          git checkout $PR_BRANCH

          # Commit and push changes
          git add src/content/aeps
          git commit -m "chore: update AEP specs"
          git push origin $PR_BRANCH

      - name: Create New PR
        if: steps.update-specs.outputs.has_changes == 'true' && steps.check-pr.outputs.pr_exists == '0'
        run: |
          # Configure git
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'

          # Create a new branch with timestamp
          branch_name="update-aep-specs-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $branch_name

          # Commit changes
          git add src/content/aeps
          git commit -m "chore: update AEP specs"
          git push origin $branch_name

          # Create PR using GitHub CLI
          gh pr create \
            --title "Update AEP Specs $(date +%Y-%m-%d)" \
            --body "Automated PR to update AEP specifications" \
            --base pr-to-main-aep \
            --head $branch_name

      - name: Trigger Build
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: spec-update
